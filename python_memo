sudo apt update
sudo apt install bluetooth bluez python3-pip
pip3 install bleak


import asyncio
from bleak import BleakScanner

async def run():
    devices = await BleakScanner.discover(timeout=5.0)
    for d in devices:
        print(d)

asyncio.run(run())



python3 scan_ble.py


# listen_ble.py
import asyncio
from bleak import BleakScanner

def callback(device, advertisement_data):
    if "H5110" in device.name:
        print(f"Device: {device.address}, RSSI: {device.rssi}, Data: {advertisement_data.manufacturer_data}")

async def run():
    scanner = BleakScanner(callback)
    await scanner.start()
    await asyncio.sleep(10.0)  # 10秒間受信
    await scanner.stop()

asyncio.run(run())




from bleak import BleakScanner
import asyncio

async def main():
    devices = await BleakScanner.discover(timeout=10.0)  # 10秒間スキャン
    for d in devices:
        print(d)

asyncio.run(main())




from bleak import BleakScanner
import asyncio

def decode_govee(data: bytes):
    # Govee H51xx フォーマット（例）
    if len(data) >= 7:
        temp_raw = int.from_bytes(data[3:5], byteorder="little", signed=True)
        hum_raw = int.from_bytes(data[5:7], byteorder="little", signed=False)

        temperature = temp_raw / 100
        humidity = hum_raw / 100
        return temperature, humidity
    return None, None

async def main():
    devices = await BleakScanner.discover(timeout=10.0)
    for d in devices:
        if d.metadata and "manufacturer_data" in d.metadata:
            for m_id, m_data in d.metadata["manufacturer_data"].items():
                if m_id == 0xEC88:  # Govee のメーカーID
                    temp, hum = decode_govee(m_data)
                    if temp is not None:
                        print(f"{d.address} 温度: {temp} ℃, 湿度: {hum} %")

asyncio.run(main())


bleak1.1.1に対応させる

import asyncio
from bleak import BleakScanner

# H5110の広告データをデコード
def decode_govee(data: bytes):
    if len(data) >= 7:
        temp_raw = int.from_bytes(data[3:5], byteorder="little", signed=True)
        hum_raw = int.from_bytes(data[5:7], byteorder="little", signed=False)
        temperature = temp_raw / 100
        humidity = hum_raw / 100
        return temperature, humidity
    return None, None

# スキャン中に呼ばれるコールバック
def detection_callback(device, advertisement_data):
    for m_id, m_data in advertisement_data.manufacturer_data.items():
        if m_id == 0xEC88:  # Govee H51xxのメーカーID
            temp, hum = decode_govee(m_data)
            if temp is not None:
                print(f"{device.address} 温度: {temp} ℃, 湿度: {hum} %")

async def main():
    scanner = BleakScanner(detection_callback)
    await scanner.start()
    print("スキャン中… 10秒間待機")
    await asyncio.sleep(10.0)
    await scanner.stop()
    print("スキャン終了")

asyncio.run(main())
